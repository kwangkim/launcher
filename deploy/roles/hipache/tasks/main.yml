---

- name: Stop&remove the existing Hipache container, if there is one
  docker: image=tutum/hipache name=hipache state=absent

- name: Pull the Hipache image
  docker_pull: repo={{item.image_name}} tag={{item.tag}}
  with_items:
    - { image_name: 'tutum/hipache', tag: '0.3.1'}
    - { image_name: 'redis', tag: '2.8'}

- name: Start hipache redis data container
  docker: image=redis volumes=/data name=hipache-redis-data stdin_open=yes tty=yes command="/bin/bash -l"

- name: Start hipache redis container
  docker: image=redis volumes_from=hipache-redis-data name=hipache-redis ports=127.0.0.1:{{hipache_redis_port}}:6379 command="redis-server --appendonly yes"

- name: Copy Hipache Redis Upstart script
  copy: src=upstart_redis.conf dest=/etc/init/docker_hipache_redis.conf mode=0644

- name: Start hipache
  docker: image=tutum/hipache links=hipache-redis:redis name=hipache ports=80:80 env="SERVER_WORKERS={{hipache_workers}}"

- name: Wait for hipache redis port
  wait_for: host=127.0.0.1 port={{hipache_redis_port}} delay=3

- name: Copy Hipache Upstart script
  copy: src=upstart_hipache.conf dest=/etc/init/docker_hipache.conf mode=0644

- name: Delete old Launcher DNS entry in hipache
  command: redis-cli -p 63790 del frontend:{{app_url}}

- name: Delete old Launcher DNS entry in hipache
  command: redis-cli -p 63790 del frontend:{{shipyard_url}}

- name: Insert Launcher DNS entry in hipache
  command: redis-cli -p 63790 rpush frontend:{{app_url}} launcher http://{{django_env_vars.LAUNCHER_IP}}:8000

- name: Insert Shipyard DNS entry in hipache
  command: redis-cli -p 63790 rpush frontend:{{shipyard_url}} launcher http://{{django_env_vars.LAUNCHER_IP}}:8080
