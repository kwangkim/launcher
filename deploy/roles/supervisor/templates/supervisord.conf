[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)
username=supervisor              ; (default is no username (open server))
password=appsembler_supervisor               ; (default is no password (open server))

[supervisord]
logfile=/var/log/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=true               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
username=supervisor              ; should be same as http_username if set
password=appsembler_supervisor                ; should be same as http_password if set

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; The below sample program section shows all possible program subsection values,
; create one or more 'real' program: sections to be able to control them under
; supervisor.

[program:{{app_name}}]
directory={{git_repo_dir}}
command={{venv_dir}}/bin/newrelic-admin run-program uwsgi --ini /etc/uwsgi.ini
environment={% for k, v in django_env_vars.iteritems() %}{% if not loop.first %},{% endif %}{{ k }}="{{ v }}"{% endfor %}

autostart=true
autorestart=true
redirect_stderr=true
stopsignal=QUIT
priority=10
stdout_logfile=/var/log/supervisor/{{app_name}}_stdout.log       ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stderr_logfile=/var/log/supervisor/{{app_name}}_stderr.log        ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderr writes (default false)

[program:celery]
command={{venv_dir}}/bin/celery worker -A deployment.tasks -c {{celery_workers}} -l info --uid celery --pidfile=/opt/celery/celery.pid
directory={{django_project_dir}}
environment={% for k, v in django_env_vars.iteritems() %}{% if not loop.first %},{% endif %}{{ k }}="{{ v }}"{% endfor %}

stdout_logfile=/var/log/supervisor/celery.log
stderr_logfile=/var/log/supervisor/celery.log
autostart=true
autorestart=true
startsecs=10
stopwaitsecs = 60
killasgroup=true

[program:celery-beat]
command={{venv_dir}}/bin/celery beat -A deployment.tasks -s /opt/celery/celerybeat-schedule -l info --uid celery --pidfile=/opt/celery/celerybeat.pid
directory={{django_project_dir}}
environment={% for k, v in django_env_vars.iteritems() %}{% if not loop.first %},{% endif %}{{ k }}="{{ v }}"{% endfor %}

stdout_logfile=/var/log/supervisor/celery-beat.log
stderr_logfile=/var/log/supervisor/celery-beat.log
autostart=true
autorestart=true
startsecs=10
stopwaitsecs = 60
killasgroup=true
